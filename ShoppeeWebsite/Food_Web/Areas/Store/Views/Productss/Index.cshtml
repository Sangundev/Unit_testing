﻿﻿@model PagedList.IPagedList<Food_Web.Models.Product>
@using PagedList.Mvc
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutStore.cshtml";
}

<div class="container-fluid mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h6 class="m-0 font-weight-bold">
                @Html.ActionLink("Trang Chủ", "Index", "Homes") / @Html.ActionLink("Sản Phẩm", "Index", "Productss")
            </h6>
        </div>

        <div class="card-body">
            <a href="@Url.Action("Export", "Productss")" class="btn btn-primary mb-2">Xuất ra Excel</a>

            <form id="importForm" action="@Url.Action("Import", "Productss")" method="post" enctype="multipart/form-data">
                <div class="input-group mb-3">
                    <input type="file" name="file" id="file" class="form-control" accept=".xlsx, .xls" />
                    <button type="button" id="importButton" class="btn btn-success">Import</button>
                </div>
            </form>

            <form id="searchForm" action="@Url.Action("Index", "Productss")" method="get" class="form-inline mb-3">
                <div class="form-group mr-2">
                    @Html.Label("Tìm kiếm:", new { @class = "mr-2" })
                    @Html.TextBox("searchString", ViewBag.SearchString as string, new { @class = "form-control" })
                </div>
                <button type="submit" class="btn btn-primary">Lọc</button>
            </form>

            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col">Tên</th>
                            <th scope="col">Danh Mục</th>
                            <th scope="col">Số Lượng</th>
                            <th scope="col">Giá</th>
                            <th scope="col">Hình Ảnh</th>
                            <th scope="col">Trạng Thái</th>
                            <th scope="col">Hành Động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Productname)</td>
                                <td>
                                    @if (item.Category != null)
                                    {
                                        @Html.DisplayFor(modelItem => item.Category.Categoryname)
                                    }
                                    else
                                    {
                                        <span>No Category</span>
                                    }
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.Soluong)</td>
                                <td>@Html.DisplayFor(modelItem => item.price)</td>
                                <td><img src="~/Content/products/@item.image" style="max-width: 80px;" class="img-fluid" /></td>
                                <td>
                                    @if (item.status && item.Soluong > 0)
                                    {
                                        <button class="btn btn-success" data-id="@item.Productid" onclick="updateProductStatus(@item.Productid, false)">Còn</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-danger" data-id="@item.Productid" onclick="updateProductStatus(@item.Productid, true)">Hết</button>
                                    }

                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("Edit", new { id = item.Productid })" class="btn btn-primary btn-sm" title="Edit">
                                            <i class="fas fa-pencil-alt"></i>
                                        </a>
                                        <a href="@Url.Action("Details", new { id = item.Productid })" class="btn btn-info btn-sm" title="Details">
                                            <i class="fas fa-info-circle"></i>
                                        </a>
                                        <button class="btn btn-danger btn-sm btnRemove" title="Delete" data-bs-toggle="modal" data-bs-target="#deleteModal" data-id="@item.Productid">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                        <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title" id="deleteModalLabel">Delete Confirmation</h5>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <div class="modal-body">
                                                        <p>Are you sure you want to delete this item?</p>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                                        <button type="button" class="btn btn-danger" id="confirmRemove" data-bs-dismiss="modal">Delete</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="pagination-container d-flex justify-content-center">
    <ul class="pagination">
        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
            @if (Model.HasPreviousPage)
            {
                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">Trước</a>
            }
            else
            {
                <span class="page-link">Trước</span>
            }
        </li>

        @for (int i = 1; i <= Model.PageCount; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
            </li>
        }

        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
            @if (Model.HasNextPage)
            {
                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Tiếp</a>
            }
            else
            {
                <span class="page-link">Tiếp</span>
            }
        </li>
    </ul>
</div>

<!-- Include Bootstrap and jQuery scripts if not already included -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

<script>

        function updateProductQuantity(productId, newQuantity) {
                $.ajax({
                    url: '@Url.Action("UpdateProductQuantity", "Productss")',
                    type: 'POST',
                    data: { id: productId, newQuantity: newQuantity },
                    success: function (data) {
                        if (data.success) {
                            console.log('Cập nhật số lượng và trạng thái sản phẩm thành công.');
                        } else {
                            console.log('Cập nhật số lượng và trạng thái sản phẩm không thành công.');
                        }
                    },
                    error: function () {
                        console.log('Đã xảy ra lỗi khi cập nhật số lượng và trạng thái sản phẩm.');
                    }
                });
        }

        function updateProductStatus(productId, status) {
      $.ajax({
        url: '@Url.Action("UpdateStatus", "Productss")',
        type: 'POST',
        data: { id: productId, status: status },
        success: function(result) {
          if (result.success) {
            // Update the button text and color
            var button = $('button[data-id="' + productId + '"]');
            if (status) {
              button.removeClass('btn-danger').addClass('btn-success').text('Còn');
            } else {
              button.removeClass('btn-success').addClass('btn-danger').text('Hết');
            }
          } else {
            alert('Có lỗi xảy ra khi cập nhật trạng thái sản phẩm.');
          }
        },
        error: function() {
          alert('Có lỗi xảy ra khi gửi yêu cầu cập nhật trạng thái sản phẩm.');
        }
      });
    }
            $(document).ready(function () {
            $('#importButton').on('click', function () {
                var formData = new FormData($('#importForm')[0]);

                $.ajax({
                    url: '@Url.Action("Import", "Productss")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        if (data.success) {
                            console.log(data.message);
                            location.reload(); // Reload the page on success
                        } else {
                            console.log('Error during import: ' + data.message);
                            // Handle error message display or other actions
                        }
                    },
                    error: function () {
                        console.log('An error occurred during import');
                        // Handle error message display or other actions
                    }
                });
            });
        });

       
        var getID = null;
        var getParent = null;

        $(document).on('click', '.btnRemove', function () {
            getID = $(this).data('id');
            getParent = $(this).closest('tr');
        });

        $(document).on('click', '#confirmRemove', function () {
            if (getID === null) {
                console.error('Product ID is not set.');
                return;
            }

            $.ajax({
                type: 'POST',
                url: '/Store/Productss/RemoveProduct',
                data: { id: getID },
                success: function (result) {
                    if (result.success) {
                        console.log('Product removed successfully.');
                        getParent.remove();
                    } else {
                        console.error('Failed to remove product:', result.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('An error occurred while removing the product:', error);
                }
            });
        });


</script>

<style>
    .border {
        border: 1px solid black;
        padding: 5px;
        text-align: center;
        vertical-align: middle;
    }
</style>